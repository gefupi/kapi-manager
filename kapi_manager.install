<?php

/*
 * This function implements the hook_schema()
 * and it will be called automaticly during modul installation.
 */
function kapi_manager_schema() {
  module_load_include('php', 'kapi_manager', 'schemas');
  return kapi_manager_getSchemas();
}


/*
 * This function implements the hook_install()
 * which will be fired after the database schemas have been created
 */
function kapi_manager_install() {
  module_load_include('php', 'kapi_manager', 'init_db');
  if (kapi_manager_init_db()) {
    drupal_set_message($message = t('Kapi-Manager database initialized successfully.'), $type='status');
  } else {
    drupal_set_message($message = t('Failed to initialize database for Kapi-Manager.'), $type='error');
  }
  $error = FALSE;
  $role = new stdClass();
  $role->name = 'Kapi-Manager Admin';
  if (!user_role_save($role)) {
    $error = true;
  } else {
    //$rid = user_role_load(DRUPAL_AUTHENTICATED_RID);
    user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access kapi_manager content'));
    $rid = user_role_load_by_name($role->name)->rid;
    user_role_grant_permissions($rid, array(
      'administrate kapi_manager content',
      'access kapi_manager content')
    );
  }
  if ($error) {
    drupal_set_message($message = t('Failed to set up role for Kapi-Manager.'), $type='error');
  } else {
    drupal_set_message($message = t('Kapi-Manager role and permission setup successful.'), $type='status');
  }
}


/*
 * This function implements the hook_enable()
 */
function kapi_manager_enable() {
  drupal_set_message($message = t('kapi_manager_enable() called successfully'), $type='status');
}


/*
 * This function implements the hook_unintall()
 */
function kapi_manager_uninstall() {
  user_role_delete('Kapi-Manager Admin');
}
