<?php
/*
 * This function generates a page containing the product list.
 */
function kapi_manager_list_products_page() {
  drupal_set_title('Product');
  $result = _kapi_manager_get_products();
  $rows = array();
  foreach ($result as $product) {
    $rows[] = array(
      array('data' => $product->id,),
      array('data' => $product->name,),
    );
  }
  $header = array(
    array('data' => 'id', 'align' => 'center'),
    array('data' => 'name', 'align' => 'center'),
  );
  return theme('table', array('header' => $header, 'rows' => $rows));
}


/*
 * This function is returns a ResultSet containing all products from db.
 */
function _kapi_manager_get_products() {
  $query = db_select('kapi_manager_products', 'p')
    ->fields('p', array('id', 'name'));
  return $query->execute();
}


function _kapi_manager_exists_product($product_name) {
  $query = db_select('kapi_manager_products', 'p')
    ->fields('p', array('name'))
    ->condition('name', $product_name, 'LIKE')
    ->execute()
    ->fetchField();
  if ($query === $product_name) {
    return TRUE;
  }
  return FALSE;
}


/*
 * This function implements hook_permission()
 */
function kapi_manager_permission() {
  return array(
    'access kapi_manager content' => array(
      'title' => t('Access content for the Kapi-Manager module.'),
    ),
    'administrate kapi_manager content' => array(
      'title' => t('Administrate content for the Kapi-Manager module.'),
      'restrict access' => TRUE,
    ),
  );
}


/*
 * This function implements hook_menu()
 */
function kapi_manager_menu() {
  $items = array();
  // TODO: switch admin permission after development/testing
//  $admin_access = array('access kapi_manager administrate');
  $admin_access = array('access kapi_manager content');
  $user_access = array('access kapi_manager content');

  $items['kapi_manager/admin'] = array(
    'title' => 'Administration',
    'page callback' => 'kapi_manager_test_page',
    'access arguments' => $admin_access,
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'kapi_manager',
  );

/*
  $items['kapi_manager/admin/options'] = array(
    'title' => 'options',
    'access arguments' => $admin_access,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'menu_name' => 'kapi_manager',
  );
*/

  $items['kapi_manager/admin/products'] = array(
    'title' => 'Products',
    'page callback' => 'kapi_manager_list_products_page',
    'access arguments' => $admin_access,
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'kapi_manager',
  );


  $items['kapi_manager/admin/products/list'] = array(
    'title' => 'list',
    'access arguments' => $admin_access,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'menu_name' => 'kapi_manager',
    'wight' => 0,
  );

  $items['kapi_manager/admin/products/edit'] = array(
    'title' => 'edit',
    'page callback' => 'kapi_manager_edit_products_page',
    'access arguments' => $admin_access,
    'type' => MENU_LOCAL_TASK,
    'menu_name' => 'kapi_manager',
    'weight' => 1,
  );


  $items['kapi_manager/admin/products/add'] = array(
    'title' => 'add a product',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('kapi_manager_add_product_form'),
    'access arguments' => $admin_access,
    'type' => MENU_LOCAL_ACTION,
    'menu_name' => 'kapi_manager',
  );

  return $items;
}


function kapi_manager_test_page() {
  return t('Hello! This is a test page.');
}

function kapi_manager_edit_products_page() {
  return t('TODO: implement edit product page');
}


function kapi_manager_add_product_form($node, &$form_state) {
  $form['product_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Product name:'),
//    '#title' => 'Add a product',
    '#default_value' => '',
    '#size' => 35,
    '#maxlength' => 35,
    '#description' => t('Please enter product name.'),
    '#required' => true,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );

  return $form;
}

function kapi_manager_add_product_form_validate($form, &$form_state) {
  $product_name = $form_state['values']['product_name'];
  if ($product_name === '') {
    form_set_error('product_name', t('You must specify a name for the product'));
  } elseif (_kapi_manager_exists_product($product_name)) {
    form_set_error('product_name', t("A product with name '@product_name' already exists.", 
    	array('@product_name' => $product_name)));
  }
}

function kapi_manager_add_product_form_submit($form, &$form_state) {
  $product_name = $form_state['values']['product_name'];
  // TODO: implement this function
}
